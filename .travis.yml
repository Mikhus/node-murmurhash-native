sudo: false

#env:
#  global:
#    secure: "LKh0Cc14itGFicEVCD+whTswTmI0HzWqy1C3cLw2z16TgST2dtmMdmUFXU1jNATfi0l4qqwrlnIgJrtzFNrc5fwxMY7XYr71F9QjfWIY7hfrTh3iZBYZJdlUdx0zClwGsN06ldDiaxKKljf/OmXuu5tds5iyel5O8KKZUaIFzKc="

matrix:
  include:
  - os: windows
    language: node_js
    node_js: "8"
  - os: windows
    language: node_js
    node_js: "9"
  - os: windows
    language: node_js
    node_js: "10"
  - os: windows
    language: node_js
    node_js: "11"

  - os: osx
    osx_image: xcode8
    language: node_js
    node_js: "6"
    env:
    - MATRIX_EVAL="CC=gcc-4.9 && CXX=g++-4.9"
  - os: osx
    osx_image: xcode8
    language: node_js
    node_js: "7"
    env:
    - MATRIX_EVAL="CC=gcc-4.9 && CXX=g++-4.9"
  - os: osx
    osx_image: xcode8
    language: node_js
    node_js: "8"
    env:
    - MATRIX_EVAL="CC=gcc-4.9 && CXX=g++-4.9"
  - os: osx
    osx_image: xcode8
    language: node_js
    node_js: "9"
    env:
    - MATRIX_EVAL="CC=gcc-4.9 && CXX=g++-4.9"
  - os: osx
    osx_image: xcode8
    language: node_js
    node_js: "10"
    env:
    - MATRIX_EVAL="CC=gcc-4.9 && CXX=g++-4.9"
  - os: osx
    osx_image: xcode8
    language: node_js
    node_js: "11"
    env:
    - MATRIX_EVAL="CC=gcc-4.9 && CXX=g++-4.9"

  - os: linux
    language: node_js
    node_js: "6"
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - g++-4.9
    env:
    - MATRIX_EVAL="CC=gcc-4.9 && CXX=g++-4.9"
  - os: linux
    language: node_js
    node_js: "7"
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - g++-4.9
    env:
    - MATRIX_EVAL="CC=gcc-4.9 && CXX=g++-4.9"
  - os: linux
    language: node_js
    node_js: "8"
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - g++-4.9
    env:
    - MATRIX_EVAL="CC=gcc-4.9 && CXX=g++-4.9"
  - os: linux
    language: node_js
    node_js: "9"
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - g++-4.9
    env:
    - MATRIX_EVAL="CC=gcc-4.9 && CXX=g++-4.9"
  - os: linux
    language: node_js
    node_js: "10"
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - g++-4.9
    env:
    - MATRIX_EVAL="CC=gcc-4.9 && CXX=g++-4.9"
  - os: linux
    language: node_js
    node_js: "11"
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - g++-4.9
    env:
    - MATRIX_EVAL="CC=gcc-4.9 && CXX=g++-4.9"

before_install:
  - eval "${MATRIX_EVAL}"
  # print versions
  - node --version
  - npm --version
  - if [[ $TRAVIS_OS_NAME != "windows" ]]; then $CXX --version; fi
  # install windows-build-tools
  - if [[ $TRAVIS_OS_NAME == "windows" ]]; then npm install --global --production windows-build-tools; fi
  - if [[ $TRAVIS_OS_NAME == "windows" ]]; then setx PYTHON "%USERPROFILE%\.windows-build-tools\python27\python.exe"; fi
  # figure out if we should publish
  - PUBLISH_BINARY=no
  # if we are building a tag then publish
  - echo $TRAVIS_BRANCH
  - echo `git describe --tags --always HEAD`
  - if [[ $TRAVIS_BRANCH == `git describe --tags --always HEAD` ]]; then PUBLISH_BINARY=yes; fi;
  - echo "Are we going to publish a binary? ->" $PUBLISH_BINARY

install:
  # ensure source install works
  - npm install --build-from-source

script:
  - npm test
  # publish on a tag
  - if [[ $PUBLISH_BINARY == yes ]]; then node-pre-gyp package; fi;
  - if [[ $PUBLISH_BINARY == yes ]]; then node-pre-gyp-github publish --release; fi;
  # cleanup
  - node-pre-gyp clean
  # test binary exists
  - if [[ $PUBLISH_BINARY == yes ]]; then npm install --fallback-to-build=false; fi;
